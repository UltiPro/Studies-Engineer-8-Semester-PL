--ZADANIE 1 - PO SUMIE KSIAZEK
SELECT P.NAME PUBLISHER, SUM(S.QUANTITY) SOLD_BOOKS,
    RANK() OVER(ORDER BY SUM(S.QUANTITY) DESC) RANK
FROM V_PUBLISHER P JOIN V_SALES S ON P.PUBID = S.PUBID
GROUP BY P.PUBID, P.NAME;

--ZADANIE 1 - PO ILOŚCI PUBLIKACJI
SELECT P.NAME PUBLISHER, COUNT(B.ISBN) SOLD_BOOKS,
    RANK() OVER(ORDER BY COUNT(B.ISBN) DESC) RANK,
    DENSE_RANK() OVER(ORDER BY COUNT(B.ISBN) DESC) DENSE_RANK
FROM BOOKS B JOIN PUBLISHER P ON P.PUBID=B.PUBID
GROUP BY P.PUBID, P.NAME;

--ZADANIE 1 - PO ILOŚCI PUBLIKACJI GDY CHCEMY TYLKO 2 PIERWSZE MIEJSCA
SELECT *
FROM
(SELECT P.NAME PUBLISHER, COUNT(B.ISBN) SOLD_BOOKS,
    RANK() OVER(ORDER BY COUNT(B.ISBN) DESC) RANK,
    DENSE_RANK() OVER(ORDER BY COUNT(B.ISBN) DESC) DENSE_RANK
FROM BOOKS B JOIN PUBLISHER P ON P.PUBID=B.PUBID
GROUP BY P.PUBID, P.NAME)
WHERE  RANK IN (1,2);
    
--ZADANIE 3
-- NTILE DZIELI NA GRUPY, JEŚLI NTILE(4)TO PODZIELI NA 4 GRUPY

SELECT C.STATE, SUM(S.QUANTITY) QUANTITY,
    NTILE(2) OVER(ORDER BY SUM(S.QUANTITY) DESC) NTILE
FROM V_CUSTOMERS C JOIN V_SALES S ON C.CUSTOMER#=S.CUSTOMER#
GROUP BY C.STATE;
    
--ZADANIE 4
-- Z PERSPEKTYWY WYDAWCY I DATY
--PARTITION BY ŻEBY ZLICZAO W OBRĘBIE DANEGO PUBLISHERA
SELECT  P.NAME, T.YEAR, T.MONTH_NUMBER, SUM(S.PROFIT) PROFIT,
    SUM(SUM(S.PROFIT)) OVER(PARTITION BY P.NAME  ORDER BY T.YEAR, T.MONTH_NUMBER
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) CUM_SUM
FROM V_PUBLISHER P JOIN V_SALES S ON P.PUBID = S.PUBID 
    JOIN V_TIME T ON T.ID_TIME=S.ID_TIME
GROUP BY P.PUBID, P.NAME, T.YEAR, T.MONTH_NUMBER
ORDER BY 1,2,3;

--ZADANIE 5
--WYNIK AVG JEST BRANY W 2 WIERSZY POPRZEDNIVH(KOL PROFIT) WIERSZ AKTUALNY I 1 WIERSZ PONIŻEJ W OBRĘBIE JEDNEGO PUBLISHERA
SELECT  P.NAME, T.YEAR, T.MONTH_NUMBER, SUM(S.PROFIT) PROFIT,
    ROUND(AVG(SUM(S.PROFIT)) OVER(PARTITION BY P.NAME  ORDER BY T.YEAR, T.MONTH_NUMBER
    ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING),2) MOV_AVG
FROM V_PUBLISHER P JOIN V_SALES S ON P.PUBID = S.PUBID 
    JOIN V_TIME T ON T.ID_TIME=S.ID_TIME
GROUP BY P.PUBID, P.NAME, T.YEAR, T.MONTH_NUMBER
ORDER BY 1,2,3;
    
--ZADANIE 6
SELECT  P.NAME, T.YEAR, T.MONTH_NUMBER, SUM(S.PROFIT) PROFIT,
    ROUND(AVG(SUM(S.PROFIT)) OVER(PARTITION BY P.NAME  ORDER BY T.YEAR, T.MONTH_NUMBER
    ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING),2) CENTRAL_AVG --ETYKIETA
FROM V_PUBLISHER P JOIN V_SALES S ON P.PUBID = S.PUBID 
    JOIN V_TIME T ON T.ID_TIME=S.ID_TIME
GROUP BY P.PUBID, P.NAME, T.YEAR, T.MONTH_NUMBER
ORDER BY 1,2,3;   

--ZADANIE 7
SELECT B.CATEGORY,T.MONTH_NAME, SUM(S.QUANTITY) QUANTITY,
    ROUND(AVG(SUM(S.QUANTITY)) OVER(PARTITION BY T.MONTH_NAME),2) AVG
FROM V_BOOKS B JOIN V_SALES S ON B.ISBN = S.ISBN
    JOIN V_TIME T ON T.ID_TIME=S.ID_TIME
WHERE T.YEAR=2005    
GROUP BY B.CATEGORY,T.MONTH_NAME;
    
--ZADANIE 8
SELECT P.NAME, SUM(S.PROFIT)PROFIT,
    FIRST_VALUE(SUM(S.PROFIT)) 
        OVER(ORDER BY SUM(S.PROFIT) DESC) -SUM(S.PROFIT) DIFF_FIRST,
    LAST_VALUE(SUM(S.PROFIT)) 
        OVER() -SUM(S.PROFIT) DIFF_LAST
FROM V_PUBLISHER P JOIN V_SALES S ON P.PUBID = S.PUBID
GROUP BY P.PUBID, P.NAME
ORDER BY 2 DESC;

--ZADANIE 9
SELECT B.CATEGORY,T.MONTH_NAME, SUM(S.PROFIT) PROFIT,
    ROUND(RATIO_TO_REPORT(SUM(S.PROFIT)) 
        OVER(PARTITION BY T.MONTH_NAME),3)*100 RATIO
FROM V_BOOKS B JOIN V_SALES S ON B.ISBN = S.ISBN
    JOIN V_TIME T ON T.ID_TIME=S.ID_TIME
WHERE T.YEAR=2005    
GROUP BY B.CATEGORY,T.MONTH_NAME;

--ZADANIE 10
SELECT *
FROM
(
    SELECT B.CATEGORY, 
    DECODE(TRIM(T.MONTH_NAME), NULL, 'SUMMARY',TRIM(T.MONTH_NAME)) MONTH_NAME, 
    SUM(S.PROFIT) PROFIT
    FROM V_BOOKS B JOIN V_SALES S ON B.ISBN = S.ISBN
        JOIN V_TIME T ON T.ID_TIME=S.ID_TIME
    WHERE T.YEAR=2005    
    GROUP BY CUBE (B.CATEGORY, T.MONTH_NAME)
) PIVOT (SUM(PROFIT) FOR MONTH_NAME IN ('MARZEC','KWIECIEŃ','SUMMARY'));




