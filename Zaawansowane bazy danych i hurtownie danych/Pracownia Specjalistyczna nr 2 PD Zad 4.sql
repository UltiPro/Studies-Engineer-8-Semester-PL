CREATE OR REPLACE PROCEDURE TEMP_TO_NEW_TEMP IS
BEGIN
    MERGE
    INTO CATEGORY_TEMP CT
    USING (
        SELECT DISTINCT CATEGORY
        FROM TEMP
    ) STC
    ON (CT.CATEGORY = STC.CATEGORY)
    WHEN NOT MATCHED THEN
        INSERT(CATEGORY) VALUES(STC.CATEGORY);
    ------------------------------------------
    MERGE
    INTO CUSTOMER_TEMP CT
    USING (
        SELECT DISTINCT EMAILID
        FROM TEMP
    ) STE
    ON (CT.EMAILID = STE.EMAILID)
    WHEN NOT MATCHED THEN
        INSERT(EMAILID) VALUES(STE.EMAILID);
    ------------------------------------------
    MERGE
    INTO GEOGRAPHY_TEMP GT
    USING (
        SELECT DISTINCT GEOGRAPHY
        FROM TEMP
    ) STG
    ON (GT.GEOGRAPHY = STG.GEOGRAPHY)
    WHEN NOT MATCHED THEN
        INSERT(GEOGRAPHY) VALUES(STG.GEOGRAPHY);
    ------------------------------------------
    MERGE
    INTO PRODUCT_TEMP PT
    USING (
        SELECT DISTINCT PRODUCT_NAME, CATEGORY
        FROM TEMP
    ) STP
    ON (PT.PRODUCT_NAME = STP.PRODUCT_NAME)
    WHEN NOT MATCHED THEN
        INSERT(PRODUCT_NAME, CATEGORY_ID) 
            VALUES(STP.PRODUCT_NAME, (SELECT CATEGORY_ID FROM CATEGORY_TEMP CT WHERE CT.CATEGORY = STP.CATEGORY));    
    ------------------------------------------ 
    MERGE
    INTO ORDER_TEMP OT
    USING (
        SELECT DISTINCT ORDER_ID, ORDER_DATE, SHIP_DATE, EMAILID, GEOGRAPHY
        FROM TEMP
    ) STO
    ON (OT.STRING_ORDER_ID = STO.ORDER_ID AND OT.ORDER_DATE = STO.ORDER_DATE AND OT.SHIP_DATE = STO.SHIP_DATE)
    WHEN NOT MATCHED THEN
        INSERT(STRING_ORDER_ID, ORDER_DATE, SHIP_DATE, CUSTOMER_ID, GEOGRAPHY_ID) 
            VALUES(STO.ORDER_ID, STO.ORDER_DATE, STO.SHIP_DATE, 
                (SELECT CUSTOMER_ID FROM CUSTOMER_TEMP CT WHERE CT.EMAILID = STO.EMAILID), 
                (SELECT GEOGRAPHY_ID FROM GEOGRAPHY_TEMP GT WHERE GT.GEOGRAPHY = STO.GEOGRAPHY));
    ------------------------------------------ 
    MERGE
    INTO ORDER_TEMP OT
    USING (
        SELECT DISTINCT ORDER_ID, ORDER_DATE, SHIP_DATE, EMAILID, GEOGRAPHY
        FROM TEMP
    ) STO
    ON (OT.STRING_ORDER_ID = STO.ORDER_ID AND OT.ORDER_DATE = STO.ORDER_DATE AND OT.SHIP_DATE = STO.SHIP_DATE)
    WHEN NOT MATCHED THEN
        INSERT(STRING_ORDER_ID, ORDER_DATE, SHIP_DATE, CUSTOMER_ID, GEOGRAPHY_ID) 
            VALUES(STO.ORDER_ID, STO.ORDER_DATE, STO.SHIP_DATE, 
                (SELECT CUSTOMER_ID FROM CUSTOMER_TEMP CT WHERE CT.EMAILID = STO.EMAILID), 
                (SELECT GEOGRAPHY_ID FROM GEOGRAPHY_TEMP GT WHERE GT.GEOGRAPHY = STO.GEOGRAPHY));
    ------------------------------------------ 
    MERGE
    INTO ORDER_PRODUCT_TEMP OPT
    USING (
        SELECT DISTINCT ORDER_ID, PRODUCT_NAME, SALES, QUANTITY, PROFIT
        FROM TEMP
    ) STOPRO
    ON (OPT.ORDER_ID = (SELECT ORDER_ID FROM ORDER_TEMP OT WHERE OT.STRING_ORDER_ID = STOPRO.ORDER_ID) 
        AND OPT.PRODUCT_ID = (SELECT PRODUCT_ID FROM PRODUCT_TEMP PT WHERE PT.PRODUCT_NAME = STOPRO.PRODUCT_NAME))
    WHEN NOT MATCHED THEN
        INSERT(ORDER_ID, PRODUCT_ID, SALES, QUANTITY, PROFIT) VALUES(
            (SELECT ORDER_ID FROM ORDER_TEMP OT WHERE OT.STRING_ORDER_ID = STOPRO.ORDER_ID), 
            (SELECT PRODUCT_ID FROM PRODUCT_TEMP PT WHERE PT.PRODUCT_NAME = STOPRO.PRODUCT_NAME), 
            STOPRO.SALES, STOPRO.QUANTITY, STOPRO.PROFIT);
END TEMP_TO_NEW_TEMP;
/
CREATE OR REPLACE FUNCTION F_PROFIT_BY_STATE_AND_YEAR(F_STATE VARCHAR2, F_DATE VARCHAR2) RETURN NUMBER IS PROFIT NUMBER := 0;
BEGIN
    SELECT SUM(OPT.QUANTITY * OPT.PROFIT)
    INTO PROFIT
    FROM ORDER_TEMP OT, ORDER_PRODUCT_TEMP OPT, GEOGRAPHY_TEMP GT
    WHERE OT.ORDER_ID = OPT.ORDER_ID AND OT.GEOGRAPHY_ID = GT.GEOGRAPHY_ID AND EXTRACT(YEAR FROM OT.ORDER_DATE) = TO_NUMBER(F_DATE) AND INSTR(F_STATE, GT.GEOGRAPHY) > 0;
    RETURN PROFIT;
END F_PROFIT_BY_STATE_AND_YEAR;

